{"ast":null,"code":"var _jsxFileName = \"/Users/laceyumamoto/Projects/Hacks/rate-my-hackathon-frontend/src/components/AllHackathons/HackathonCard.js\";\nimport React from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction calculateAvgRating(ratings) {\n  var sum = 0;\n\n  for (var i = 0; i < ratings.length; i++) {\n    sum += ratings[i];\n  }\n\n  var avg = sum / ratings.length;\n  avg = Math.round(avg * 10) / 10; // round to nearest decimal\n\n  return avg;\n}\n\nconst HackathonCard = props => {\n  const hackathon = props.hackathon;\n  var ratings = [];\n  const reviews = hackathon.reviews;\n  const numReviews = reviews.length;\n\n  for (var i = 0; i < reviews.length; i++) {\n    ratings.push(reviews[i].rating);\n  }\n\n  const avgRating = calculateAvgRating(ratings);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    centered: true,\n    fluid: true,\n    href: `/hackathon/${hackathon._id}`,\n    children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n      header: hackathon.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      description: hackathon.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      extra: true,\n      children: [avgRating, \" / 5 based on \", numReviews, \" reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = HackathonCard;\nexport default HackathonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HackathonCard\");","map":{"version":3,"sources":["/Users/laceyumamoto/Projects/Hacks/rate-my-hackathon-frontend/src/components/AllHackathons/HackathonCard.js"],"names":["React","Card","calculateAvgRating","ratings","sum","i","length","avg","Math","round","HackathonCard","props","hackathon","reviews","numReviews","push","rating","avgRating","_id","name","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,MAAIC,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCD,IAAAA,GAAG,IAAID,OAAO,CAACE,CAAD,CAAd;AACD;;AACD,MAAIE,GAAG,GAAGH,GAAG,GAAGD,OAAO,CAACG,MAAxB;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,EAAjB,IAAuB,EAA7B,CANmC,CAMF;;AACjC,SAAOA,GAAP;AACD;;AAED,MAAMG,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AAEA,MAAIT,OAAO,GAAG,EAAd;AACA,QAAMU,OAAO,GAAGD,SAAS,CAACC,OAA1B;AACA,QAAMC,UAAU,GAAGD,OAAO,CAACP,MAA3B;;AACA,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,OAAO,CAACP,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,IAAAA,OAAO,CAACY,IAAR,CAAaF,OAAO,CAACR,CAAD,CAAP,CAAWW,MAAxB;AACD;;AAED,QAAMC,SAAS,GAAGf,kBAAkB,CAACC,OAAD,CAApC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,KAAK,MAApB;AAAqB,IAAA,IAAI,EAAG,cAAaS,SAAS,CAACM,GAAI,EAAvD;AAAA,4BACE,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,MAAM,EAAEN,SAAS,CAACO;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,WAAW,EAAEP,SAAS,CAACQ;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAA,iBACCH,SADD,oBAC0BH,UAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CArBD;;KAAMJ,a;AAuBN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\n\nfunction calculateAvgRating(ratings) {\n  var sum = 0;\n  for (var i = 0; i < ratings.length; i++) {\n    sum += ratings[i];\n  }\n  var avg = sum / ratings.length;\n  avg = Math.round(avg * 10) / 10; // round to nearest decimal\n  return avg;\n}\n\nconst HackathonCard = (props) => {\n  const hackathon = props.hackathon;\n\n  var ratings = [];\n  const reviews = hackathon.reviews;\n  const numReviews = reviews.length;\n  for (var i = 0; i < reviews.length; i++) {\n    ratings.push(reviews[i].rating);\n  }\n\n  const avgRating = calculateAvgRating(ratings);\n\n  return (\n    <Card centered fluid href={`/hackathon/${hackathon._id}`}>\n      <Card.Content header={hackathon.name}/>\n      <Card.Content description={hackathon.description} />\n      <Card.Content extra>\n      {avgRating} / 5 based on {numReviews} reviews\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default HackathonCard;\n"]},"metadata":{},"sourceType":"module"}