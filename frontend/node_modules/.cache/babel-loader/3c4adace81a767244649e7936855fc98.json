{"ast":null,"code":"var _jsxFileName = \"/Users/laceyumamoto/Projects/Hacks/rate-my-hackathon-frontend/src/components/AllHackathons/HackathonCard.js\";\nimport React from \"react\";\nimport { Card, Label } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction calculateAvgRating(ratings) {\n  var sum = 0;\n\n  for (var i = 0; i < ratings.length; i++) {\n    sum += ratings[i];\n  }\n\n  var avg = sum / ratings.length;\n  avg = Math.round(avg * 10) / 10; // round to nearest decimal\n\n  return avg;\n}\n\nconst HackathonCard = props => {\n  const hackathon = props.hackathon; // calculate avg rating\n\n  let avgRating;\n  let numReviews;\n\n  if (hackathon.reviews) {\n    var ratings = [];\n    const reviews = hackathon.reviews;\n    numReviews = reviews.length;\n\n    for (var i = 0; i < reviews.length; i++) {\n      ratings.push(reviews[i].rating);\n    }\n\n    avgRating = calculateAvgRating(ratings);\n  } else {\n    avgRating = 0;\n    numReviews = 0;\n  }\n\n  const themes = hackathon.themes;\n  let themeList;\n\n  if (!themes) {\n    themeList = \"No themes!\";\n  } else {\n    themeList = themes.map((theme, k) => /*#__PURE__*/_jsxDEV(Label, {\n      children: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 42\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    centered: true,\n    fluid: true,\n    href: `/hackathon/${hackathon._id}`,\n    children: /*#__PURE__*/_jsxDEV(Card.Content, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"left\",\n            children: hackathon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"right\",\n            children: [avgRating, \" / 5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n        children: hackathon.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: [numReviews, \" Review\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this) // <Card centered fluid href={`/hackathon/${hackathon._id}`}>\n  //   <Card.Content header={hackathon.name}/>\n  //   <Card.Content description={hackathon.description} />\n  //   <Card.Content extra>\n  //   {avgRating} / 5 based on {numReviews} reviews\n  //   </Card.Content>\n  // </Card>\n  ;\n};\n\n_c = HackathonCard;\nexport default HackathonCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"HackathonCard\");","map":{"version":3,"sources":["/Users/laceyumamoto/Projects/Hacks/rate-my-hackathon-frontend/src/components/AllHackathons/HackathonCard.js"],"names":["React","Card","Label","calculateAvgRating","ratings","sum","i","length","avg","Math","round","HackathonCard","props","hackathon","avgRating","numReviews","reviews","push","rating","themes","themeList","map","theme","k","_id","name","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;;;AAEA,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,MAAIC,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCD,IAAAA,GAAG,IAAID,OAAO,CAACE,CAAD,CAAd;AACD;;AACD,MAAIE,GAAG,GAAGH,GAAG,GAAGD,OAAO,CAACG,MAAxB;AACAC,EAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,EAAjB,IAAuB,EAA7B,CANmC,CAMF;;AACjC,SAAOA,GAAP;AACD;;AAED,MAAMG,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB,CAD+B,CAG/B;;AACA,MAAIC,SAAJ;AACA,MAAIC,UAAJ;;AACA,MAAIF,SAAS,CAACG,OAAd,EAAuB;AACrB,QAAIZ,OAAO,GAAG,EAAd;AACA,UAAMY,OAAO,GAAGH,SAAS,CAACG,OAA1B;AACAD,IAAAA,UAAU,GAAGC,OAAO,CAACT,MAArB;;AACA,SAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,OAAO,CAACT,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,MAAAA,OAAO,CAACa,IAAR,CAAaD,OAAO,CAACV,CAAD,CAAP,CAAWY,MAAxB;AACD;;AACDJ,IAAAA,SAAS,GAAGX,kBAAkB,CAACC,OAAD,CAA9B;AACD,GARD,MAQO;AACLU,IAAAA,SAAS,GAAG,CAAZ;AACAC,IAAAA,UAAU,GAAG,CAAb;AACD;;AAED,QAAMI,MAAM,GAAGN,SAAS,CAACM,MAAzB;AAEA,MAAIC,SAAJ;;AAEA,MAAI,CAACD,MAAL,EAAa;AACXC,IAAAA,SAAS,GAAG,YAAZ;AACD,GAFD,MAEO;AACLA,IAAAA,SAAS,GAAGD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,CAAR,kBAAc,QAAC,KAAD;AAAA,gBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA,YAAzB,CAAZ;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,KAAK,MAApB;AAAqB,IAAA,IAAI,EAAG,cAAaT,SAAS,CAACW,GAAI,EAAvD;AAAA,2BACE,QAAC,IAAD,CAAM,OAAN;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,+BACE;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAwBX,SAAS,CAACY;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAA,uBAAyBX,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD,CAAM,WAAN;AAAA,kBAAmBD,SAAS,CAACa;AAA7B;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,IAAD,CAAM,IAAN;AAAA,mBACGX,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CAiBE;AACA;AACA;AACA;AACA;AACA;AACA;AAvBF;AAyBD,CAtDD;;KAAMJ,a;AAwDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Card, Label } from \"semantic-ui-react\";\n\nfunction calculateAvgRating(ratings) {\n  var sum = 0;\n  for (var i = 0; i < ratings.length; i++) {\n    sum += ratings[i];\n  }\n  var avg = sum / ratings.length;\n  avg = Math.round(avg * 10) / 10; // round to nearest decimal\n  return avg;\n}\n\nconst HackathonCard = (props) => {\n  const hackathon = props.hackathon;\n\n  // calculate avg rating\n  let avgRating;\n  let numReviews;\n  if (hackathon.reviews) {\n    var ratings = [];\n    const reviews = hackathon.reviews;\n    numReviews = reviews.length;\n    for (var i = 0; i < reviews.length; i++) {\n      ratings.push(reviews[i].rating);\n    }\n    avgRating = calculateAvgRating(ratings);\n  } else {\n    avgRating = 0;\n    numReviews = 0;\n  }\n\n  const themes = hackathon.themes;\n\n  let themeList;\n\n  if (!themes) {\n    themeList = \"No themes!\";\n  } else {\n    themeList = themes.map((theme, k) => <Label>{theme}</Label>);\n  }\n\n  return (\n    <Card centered fluid href={`/hackathon/${hackathon._id}`}>\n      <Card.Content>\n        <Card.Header>\n          <h1>\n            <span className=\"left\">{hackathon.name}</span>\n            <span className=\"right\">{avgRating} / 5</span>\n          </h1>\n        </Card.Header>\n        <Card.Description>{hackathon.description}</Card.Description>\n        <br />\n        <Card.Meta>\n          {numReviews} Review\n        </Card.Meta>\n      </Card.Content>\n    </Card>\n\n    // <Card centered fluid href={`/hackathon/${hackathon._id}`}>\n    //   <Card.Content header={hackathon.name}/>\n    //   <Card.Content description={hackathon.description} />\n    //   <Card.Content extra>\n    //   {avgRating} / 5 based on {numReviews} reviews\n    //   </Card.Content>\n    // </Card>\n  );\n};\n\nexport default HackathonCard;\n"]},"metadata":{},"sourceType":"module"}